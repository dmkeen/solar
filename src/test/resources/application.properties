# The rate at which the current power values are sampled from the inverter.
# Note that the inverter only returns timestamps with whole seconds, so reducing this below 1000 is of questionable value.
app.current-power.sample-rate-ms=1000

# Hostname or IP of the inverter REST API
app.inverter.host=

# Solcast API properties
# Ref: https://docs.solcast.com.au/#introduction
# Hobby account is limited to 20 API calls per day.
#
app.solcast.base-url=https://api.solcast.com.au
app.solcast.api-key=
app.solcast.site-id=test-site-id
# Cron expression for when to retrieve forecasts
# Due to API rate limit, retrieve hourly between 6am and 4pm
app.solcast.forecast-retrieval-cron=0 0 6,7,8,9,10,11,12,13,14,15,16 * * ?
# Cron expression for when to upload measurements (used for forecast tuning)
# Note that measurements are also uploaded on application startup
app.solcast.measurement-upload-cron=0 0 21 * * ?

# Frequency at which to calculate the cost of power, in seconds.
app.power.collection-frequency-sec=60

# Datasource properties
#
# Setting platform tells Spring to look for a file 'schema-{platform}.sql' to use for db initialisation.
spring.sql.init.platform=h2
spring.datasource.url=jdbc:h2:mem:solar;TRACE_LEVEL_FILE=4

# Logging
logging.level.org.springframework.web.client=debug
logging.level.org.springframework.jdbc=debug

# Configure Jackson to use the time zone as specified when deserializing
spring.jackson.deserialization.ADJUST_DATES_TO_CONTEXT_TIME_ZONE=false

# Enable test profile
spring.profiles.active=test